syntax = "proto3";

import "google/protobuf/timestamp.proto";

package bayes.bob.points;

message UserData {
  // Total number of points currently owned by the user.
  int32 current = 1;

  // List of all transactions using points.
  repeated Transaction history = 2;

  // Advice modules that have been unlocked. Advice IDs not present in that map
  // are considered as locked (or at least not unlocked).
  map<string, bool> unlocked_advice_modules = 3;

  // Advice modules that have been explored. Advice IDs not present in that map
  // are considered unexplored.
  map<string, bool> explored_advice_modules = 4;

  // TODO(pascal): Add unlocked tips, focus emails and content in advice as needed.
}

message Transaction {
  // Number of points received (positive) or used (negative) by the user during
  // this transaction.
  int32 delta = 1;

  // Reason for the transaction.
  TransactionType reason = 2;

  // Date and time of the transaction (when it reaches the server).
  google.protobuf.Timestamp at = 3;

  // ID of an advice if this transaction is linked to a specific advice.
  string advice_id = 4;

  // Short name of the network if the transaction was about sharing to a
  // network (e.g. facebook, twitter, email, etc).
  string network = 5;

  // TODO(pascal): Add tip ID, visual element or others as needed.
}

enum TransactionType {
  UNKNOWN_TRANSACTION = 0;

  // Reward for sharing Bob to others.
  SHARE_REWARD = 1;

  // Unlock an advice module.
  UNLOCK_ADVICE_MODULE = 2;

  // Reward for rating Bob.
  RATE_REWARD = 3;

  // Reword for exploring an advice.
  EXPLORE_ADVICE_REWARD = 4;
}
