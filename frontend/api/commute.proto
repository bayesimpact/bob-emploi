syntax = "proto3";

import "bob_emploi/frontend/api/geo.proto";

package bayes.bob;

message HiringCity {
  // City that is hiring.
  FrenchCity city = 1;

  // Offers in this city, possibly for a given job group depending on context. Only the comparison
  // of this number to other cities will be meaningful.
  // TODO(cyrille): Consider deprecating this, since we're actually only looking at the offers per
  // inhabitant.
  float offers = 4;

  // Offers in this city, divided by the population of the city, if known.
  float offers_per_inhabitant = 2;
}

message HiringCities {
  // List of cities that hire for a given job group and period, sorted by descending offers per
  // inhabitant.
  repeated HiringCity hiring_cities = 1;
}

message CommutingCity {
  // Name of the city.
  string name = 1;

  // Number of offers per inhabitants, relative to the home city of the users, for their job group,
  // on the 2 last years. 0 means undefined.
  float relative_offers_per_inhabitant = 2;

  // Distance of the commute, from the project's target city.
  float distance_km = 3;

  // ID of the département in which the city is. E.g. "69" for Rhône, "2A" for
  // Corse du Sud, or "976" for Mayotte.
  string departement_id = 4;
}

message CommutingCities {
  // List of cities to commute to sorted by number of offers per inhabitants.
  repeated CommutingCity cities = 1;
}
