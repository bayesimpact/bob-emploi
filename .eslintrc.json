{
  "extends": [
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:react/recommended",
    "plugin:unicorn/recommended",
    "plugin:you-dont-need-lodash-underscore/compatible"
  ],
  "overrides": [{
    "files": ["*.ts", "*.tsx"],
    "extends": ["plugin:@typescript-eslint/recommended"],
    "rules": {
        "@typescript-eslint/ban-ts-ignore": 0,
        "@typescript-eslint/indent": ["error", 2, {"SwitchCase": 1}],
        "@typescript-eslint/member-delimiter-style": ["error", {"multiline": {"delimiter": "none"}}],
        "@typescript-eslint/no-unused-vars": ["error", {
            "argsIgnorePattern": "^unused[A-Z]",
            "varsIgnorePattern": "^omitted[A-Z]"
        }],
        "@typescript-eslint/no-var-requires": 0,
        // Rules already defined in @typescript-eslint.
        "indent": 0,
        "no-unused-vars": 0,
        "no-use-before-define": 0
    }
  }],
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@mysticatea",
    "@typescript-eslint",
    "import",
    "json5",
    "jsx-a11y",
    "react",
    "react-hooks",
    "react-perf",
    "unicorn"
  ],
  "settings": {
    "import/resolver": {
      "typescript": {},
      "webpack": {}
    },
    "react": {
      "version": "16.8"
    }
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
      "modules": true
    }
  },
  "env": {
    "browser": true,
    "amd": true,
    "es6": true,
    "node": true
  },
  "reportUnusedDisableDirectives": true,
  "rules": {
    "@mysticatea/no-this-in-static": "error",
    "array-bracket-spacing": "error",
    "arrow-spacing": "error",
    "brace-style": ["error", "1tbs", {"allowSingleLine": false}],
    "camelcase": ["error", {"ignoreDestructuring": true}],
    "comma-dangle": ["error", "always-multiline"],
    "comma-spacing": "error",
    "comma-style": "error",
    "computed-property-spacing": "error",
    "dot-location": "error",
    "eol-last": "error",
    "eqeqeq": "error",
    "func-call-spacing": "error",
    "global-strict": 0,
    "import/extensions": ["error", "ignorePackages", {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
    }],
    "import/first": ["error", "absolute-first"],
    "import/newline-after-import": "error",
    "import/no-duplicates": ["error", {"considerQueryString": true}],
    "import/unambiguous": 0,
    "indent": ["error", 2, {"SwitchCase": 1}],
    "jsx-a11y/accessible-emoji": "error",
    "jsx-a11y/alt-text": "error",
    "jsx-quotes": ["error", "prefer-double"],
    "key-spacing": "error",
    "keyword-spacing": "error",
    "linebreak-style": "error",
    "lines-between-class-members": "error",
    "max-len": ["error", 100, 4, { "ignoreUrls": true }],
    "no-console": "error",
    "no-else-return": "error",
    "no-irregular-whitespace": ["error", {"skipStrings": false}],
    "no-lonely-if": "error",
    "no-multi-spaces": "error",
    "no-trailing-spaces": "error",
    "no-unexpected-multiline": "error",
    "no-unused-vars": ["error", {
        "argsIgnorePattern": "^unused[A-Z]",
        "varsIgnorePattern": "^omitted[A-Z]"
    }],
    "no-whitespace-before-property": "error",
    "object-curly-spacing": "error",
    "operator-assignment": "error",
    "prefer-const": "error",
    "prefer-rest-params": "error",
    "quotes": ["error", "single", "avoid-escape"],
    "quote-props": ["warn", "consistent-as-needed", {
        "numbers": true,
        "unnecessary": true
    }],
    "react/boolean-prop-naming": ["error", {"rule": "^(is|are|has|should|can)[A-Z].*"}],
    "react/function-component-definition": ["error", {
        "namedComponents": "arrow-function"
    }],
    "react/jsx-curly-brace-presence": ["error", "never"],
    "react/jsx-curly-spacing": "error",
    "react/jsx-equals-spacing": "error",
    "react/jsx-tag-spacing": "error",
    "react/no-unescaped-entities": ["error", {"forbid": [
        {"char": ">", "alternatives": ["&gt;"]},
        {"char": "}", "alternatives": ["&#125;"]},
        {"char": "•", "alternatives": ["&bull;", "·"]}
    ]}],
    "react/no-unused-prop-types": ["error", {"skipShapeProps": true}],
    "react/no-unused-state": "error",
    "react/sort-comp": ["error", {
        "order":  [
            "static-variables",
            "static-methods",
            "lifecycle",
            "everything-else",
            "render"
        ]
    }],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    // TODO(cyrille): Consider adding the analogue for objects.
    "react-perf/jsx-no-new-array-as-prop": "error",
    "react-perf/jsx-no-new-function-as-prop": "error",
    "rest-spread-spacing": "error",
    "semi": ["error", "never"],
    "sort-keys": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": ["error", "never"],
    "space-in-parens": "error",
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "spaced-comment": "error",
    "switch-colon-spacing": "error",
    "template-curly-spacing": "error",
    "unicorn/catch-error-name": ["error", {"caughtErrorsIgnorePattern": "^unusedError$"}],
    "unicorn/explicit-length-check": 0,
    // TODO(cyrille): Put back consistent-function-scoping once
    // https://github.com/sindresorhus/eslint-plugin-unicorn/issues/374 is resolved.
    "unicorn/consistent-function-scoping": 0,
    "unicorn/filename-case": ["error", {"case": "snakeCase"}],
    "unicorn/no-nested-ternary": 0,
    "unicorn/prefer-add-event-listener": 0,
    "unicorn/prefer-node-append": 0,
    "unicorn/prefer-node-remove": 0,
    "unicorn/prefer-query-selector": 0,
    "unicorn/prevent-abbreviations": 0
  }
}
