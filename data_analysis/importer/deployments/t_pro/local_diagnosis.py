"""Import local stats for t_pro jobflix."""

import locale
from typing import Any

from bob_emploi.data_analysis.importer import local_diagnosis
from bob_emploi.data_analysis.importer.deployments.t_pro import cleaned_data
from bob_emploi.data_analysis.lib import mongo

# TODO(cyrille): Get those from Insee France Departements.
_ARA_DEPARTEMENTS = {'07', '15', '69', '38', '73', '74', '01', '03', '63', '43', '42', '26'}


def make_dicts(*, imt_salaries_csv: str, pcs_rome_crosswalk: str, metiers_xlsx: str) \
        -> list[dict[str, Any]]:
    """Import job info in MongoDB.

    Args:
        imt_folder: path to a local folder containing IMT csv files. Can be
            generated by `make imt`.
        metiers_xlsx: path to an Excel file containing Transitions Pro jobs.
    Returns:
        A list of departement level diagnosis data as JSON LocalJobGroup protos.
    """

    locale.setlocale(locale.LC_ALL, 'fr_FR.UTF-8')

    tpro_jobs = set(cleaned_data.clean_metiers(metiers_xlsx).job_group.unique())
    imt = local_diagnosis.get_salaries_imt(
        imt_salaries_csv=imt_salaries_csv, pcs_rome_crosswalk=pcs_rome_crosswalk,
        allowed_area_ids=_ARA_DEPARTEMENTS, allowed_job_ids=tpro_jobs,
    )[['local_id', 'juniorSalary', 'seniorSalary']]
    return [{
        '_id': local_stats.local_id,
        'imt': {
            'juniorSalary': local_stats.juniorSalary,
            'seniorSalary': local_stats.seniorSalary,
        },
    } for local_stats in imt.itertuples()]


if __name__ == '__main__':
    mongo.importer_main(make_dicts, 'job_group_info')
