# Stubs for scrapy.statscollectors (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

logger: Any

class StatsCollector:
    def __init__(self, crawler: Any) -> None: ...
    def get_value(self, key: Any, default: Optional[Any] = ..., spider: Optional[Any] = ...): ...
    def get_stats(self, spider: Optional[Any] = ...): ...
    def set_value(self, key: Any, value: Any, spider: Optional[Any] = ...) -> None: ...
    def set_stats(self, stats: Any, spider: Optional[Any] = ...) -> None: ...
    def inc_value(self, key: Any, count: int = ..., start: int = ..., spider: Optional[Any] = ...) -> None: ...
    def max_value(self, key: Any, value: Any, spider: Optional[Any] = ...) -> None: ...
    def min_value(self, key: Any, value: Any, spider: Optional[Any] = ...) -> None: ...
    def clear_stats(self, spider: Optional[Any] = ...) -> None: ...
    def open_spider(self, spider: Any) -> None: ...
    def close_spider(self, spider: Any, reason: Any) -> None: ...

class MemoryStatsCollector(StatsCollector):
    spider_stats: Any = ...
    def __init__(self, crawler: Any) -> None: ...

class DummyStatsCollector(StatsCollector):
    def get_value(self, key: Any, default: Optional[Any] = ..., spider: Optional[Any] = ...): ...
    def set_value(self, key: Any, value: Any, spider: Optional[Any] = ...) -> None: ...
    def set_stats(self, stats: Any, spider: Optional[Any] = ...) -> None: ...
    def inc_value(self, key: Any, count: int = ..., start: int = ..., spider: Optional[Any] = ...) -> None: ...
    def max_value(self, key: Any, value: Any, spider: Optional[Any] = ...) -> None: ...
    def min_value(self, key: Any, value: Any, spider: Optional[Any] = ...) -> None: ...
