# Stubs for scrapy.pipelines.files (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from scrapy.pipelines.media import MediaPipeline
from typing import Any, Optional

logger: Any

class FileException(Exception): ...

class FSFilesStore:
    basedir: Any = ...
    created_directories: Any = ...
    def __init__(self, basedir: Any) -> None: ...
    def persist_file(self, path: Any, buf: Any, info: Any, meta: Optional[Any] = ..., headers: Optional[Any] = ...) -> None: ...
    def stat_file(self, path: Any, info: Any): ...

class S3FilesStore:
    AWS_ACCESS_KEY_ID: Any = ...
    AWS_SECRET_ACCESS_KEY: Any = ...
    AWS_ENDPOINT_URL: Any = ...
    AWS_REGION_NAME: Any = ...
    AWS_USE_SSL: Any = ...
    AWS_VERIFY: Any = ...
    POLICY: str = ...
    HEADERS: Any = ...
    is_botocore: Any = ...
    s3_client: Any = ...
    S3Connection: Any = ...
    def __init__(self, uri: Any) -> None: ...
    def stat_file(self, path: Any, info: Any): ...
    def persist_file(self, path: Any, buf: Any, info: Any, meta: Optional[Any] = ..., headers: Optional[Any] = ...): ...

class GCSFilesStore:
    GCS_PROJECT_ID: Any = ...
    CACHE_CONTROL: str = ...
    POLICY: Any = ...
    bucket: Any = ...
    prefix: Any = ...
    def __init__(self, uri: Any) -> None: ...
    def stat_file(self, path: Any, info: Any): ...
    def persist_file(self, path: Any, buf: Any, info: Any, meta: Optional[Any] = ..., headers: Optional[Any] = ...): ...

class FilesPipeline(MediaPipeline):
    MEDIA_NAME: str = ...
    EXPIRES: int = ...
    STORE_SCHEMES: Any = ...
    DEFAULT_FILES_URLS_FIELD: str = ...
    DEFAULT_FILES_RESULT_FIELD: str = ...
    store: Any = ...
    expires: Any = ...
    FILES_URLS_FIELD: Any = ...
    FILES_RESULT_FIELD: Any = ...
    files_urls_field: Any = ...
    files_result_field: Any = ...
    def __init__(self, store_uri: Any, download_func: Optional[Any] = ..., settings: Optional[Any] = ...) -> None: ...
    @classmethod
    def from_settings(cls, settings: Any): ...
    def media_to_download(self, request: Any, info: Any): ...
    def media_failed(self, failure: Any, request: Any, info: Any) -> None: ...
    def media_downloaded(self, response: Any, request: Any, info: Any): ...
    def inc_stats(self, spider: Any, status: Any) -> None: ...
    def get_media_requests(self, item: Any, info: Any): ...
    def file_downloaded(self, response: Any, request: Any, info: Any): ...
    def item_completed(self, results: Any, item: Any, info: Any): ...
    def file_path(self, request: Any, response: Optional[Any] = ..., info: Optional[Any] = ...): ...
    def file_key(self, url: Any): ...
